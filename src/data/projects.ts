import { Project } from '../types/project';

export const projects: Project[] = [
  {
    id: 1,
    title: 'Tyre Shop Website',
    description: 'A full-stack e-commerce platform for a tyre shop, built with the MERN stack.',
    longDescription: 'This comprehensive e-commerce platform for a tyre shop showcases the power and flexibility of the MERN (MongoDB, Express.js, React, Node.js) stack. The website offers a seamless shopping experience for customers looking to purchase tyres online. It features a responsive design, real-time inventory management, secure payment processing, and a user-friendly admin panel for easy product and order management.',
    technologies: ['React', 'Node.js', 'Express', 'MongoDB', 'Tailwind CSS'],
    features: [
      'User authentication and authorization',
      'Product catalog with advanced filtering',
      'Shopping cart functionality',
      'Secure checkout process',
      'Admin dashboard for inventory management',
      'Order tracking system',
    ],
    images: [
      '/projects/project_1.jpg',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
    ],
    liveUrl: 'https://tyre-shop-demo.com',
    githubUrl: 'https://github.com/kavindadewmith/tyre-shop',
    challenges: 'One of the main challenges was implementing a real-time inventory system that could handle concurrent users and prevent overselling. This was solved by using MongoDB transactions and implementing a queue system for processing orders.',
    futureImprovements: 'Future plans include adding a recommendation engine based on user browsing history, implementing a loyalty program, and developing a mobile app for both iOS and Android platforms.',
  },
  {
    id: 2,
    title: 'Real-time Cryptocurrency Tracker',
    description: 'A web application that provides real-time tracking of cryptocurrency prices and market trends.',
    longDescription: 'This real-time cryptocurrency tracker offers users up-to-the-second information on various cryptocurrencies. Built with React for the frontend and Node.js for the backend, it utilizes WebSocket connections to stream live data from multiple cryptocurrency exchanges. The application features interactive charts, price alerts, and portfolio tracking capabilities.',
    technologies: ['React', 'Node.js', 'WebSocket', 'Chart.js'],
    features: [
      'Real-time price updates',
      'Interactive price charts',
      'Multiple cryptocurrency support',
      'User-configurable price alerts',
      'Portfolio tracking and performance analysis',
      'News feed integration',
    ],
    images: [
      '/projects/project_2.jpg',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
    ],
    liveUrl: 'https://crypto-tracker-demo.com',
    githubUrl: 'https://github.com/kavindadewmith/crypto-tracker',
    challenges: 'The main challenge was handling the high volume of real-time data without overwhelming the client or causing performance issues. This was addressed by implementing efficient data structures and using WebWorkers for background processing.',
    futureImprovements: 'Future enhancements include adding machine learning-based price prediction models, implementing social features for users to share insights, and expanding the range of supported cryptocurrencies and exchanges.',
  },
  {
    id: 3,
    title: 'Influencer-Business Connection Platform',
    description: 'A platform designed to connect influencers with businesses, facilitating collaborations and partnerships in the digital marketing space.',
    longDescription: 'This innovative platform serves as a bridge between influencers and businesses looking to collaborate on marketing campaigns. Built using the MERN stack, it offers a robust matching algorithm, secure messaging, and contract management features. The platform streamlines the process of finding and managing influencer partnerships, making it easier for businesses to run effective social media campaigns.',
    technologies: ['React', 'Node.js', 'MongoDB', 'Express', 'Socket.io'],
    features: [
      'Advanced influencer search and filtering',
      'AI-powered matching algorithm',
      'Secure in-platform messaging',
      'Campaign management tools',
      'Analytics dashboard',
      'Smart contract integration',
    ],
    images: [
      '/projects/project_3.jpg',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
    ],
    liveUrl: 'https://influencer-connect-demo.com',
    githubUrl: 'https://github.com/kavindadewmith/influencer-connect',
    challenges: 'One of the biggest challenges was developing a fair and accurate matching algorithm that could pair influencers with relevant businesses. This was overcome by implementing a machine learning model that considers multiple factors including niche, audience demographics, and past performance.',
    futureImprovements: 'Future plans include integrating blockchain technology for transparent and secure payments, developing an AI-driven content suggestion tool, and expanding the platform to include a wider range of digital creators beyond traditional social media influencers.',
  },
  {
    id: 4,
    title: 'OpenGL 3D Visualization',
    description: 'An interactive 3D scene created with OpenGL, featuring complex animations, particle systems, and user interaction capabilities.',
    longDescription: 'This OpenGL-based 3D visualization project showcases advanced graphics programming techniques. The application renders a detailed, interactive 3D environment with dynamic lighting, complex particle systems, and physics-based animations. Users can navigate through the scene, interact with objects, and modify various parameters in real-time.',
    technologies: ['C++', 'OpenGL', 'GLSL'],
    features: [
      'Dynamic lighting and shadow mapping',
      'Complex particle systems',
      'Physics-based animations',
      'User-controlled camera',
      'Interactive object manipulation',
      'Real-time shader editing',
    ],
    images: [
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
      '/placeholder.svg?height=300&width=400',
    ],
    liveUrl: 'https://opengl-demo.kavindadewmith.com',
    githubUrl: 'https://github.com/kavindadewmith/opengl-visualization',
    challenges: 'The main challenge was optimizing the rendering pipeline to maintain high frame rates while handling complex scenes with numerous particles and dynamic lighting. This was addressed through careful GPU memory management, level-of-detail techniques, and efficient shader implementations.',
    futureImprovements: 'Future enhancements include implementing ray tracing for more realistic lighting, adding support for VR headsets, and developing a user-friendly interface for creating and modifying 3D scenes without coding.',
  },
];

